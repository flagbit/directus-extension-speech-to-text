import{defineInterface as e}from"@directus/extensions-sdk";import{defineComponent as t,ref as n,computed as a,resolveComponent as i,openBlock as o,createElementBlock as r,createElementVNode as s,createBlock as l,resolveDynamicComponent as c,normalizeClass as d,createVNode as u,withCtx as p,createTextVNode as f,createCommentVNode as v,toDisplayString as h}from"vue";const m={class:"speech-to-text-interface"},g={class:"input-container"},x={class:"mic-button-container"},y=["disabled","title"],b={key:0},w={key:1},k={key:2},_={key:0,class:"warning-message"},A={key:1,class:"error-message"},P={key:2,class:"recording-indicator"};var T=t({__name:"speech-to-text",props:{value:{},placeholder:{default:"Text eingeben oder Mikrofon verwenden..."},openai_api_key:{},language:{default:"auto"},append_mode:{type:Boolean,default:!0},line_separator:{default:"auto"},type:{},field:{}},emits:["input"],setup(e,{emit:t}){const T=e,I=t,S=n(!1),E=n(!1),C=n(""),U=n(null),M=n([]),N=a((()=>T.openai_api_key)),O=a((()=>"text"===T.type||"text"===T.field?.type||T.value&&T.value.length>100));async function R(){S.value?U.value&&S.value&&(U.value.stop(),S.value=!1):await async function(){try{C.value="";const e=await navigator.mediaDevices.getUserMedia({audio:{sampleRate:16e3,channelCount:1,echoCancellation:!0,noiseSuppression:!0,autoGainControl:!0}});M.value=[];let t="audio/webm;codecs=opus";MediaRecorder.isTypeSupported(t)||(t="audio/webm",MediaRecorder.isTypeSupported(t)||(t="audio/mp4",MediaRecorder.isTypeSupported(t)||(t=""))),U.value=new MediaRecorder(e,t?{mimeType:t}:void 0),U.value.ondataavailable=e=>{e.data.size>0&&M.value.push(e.data)},U.value.onstop=async()=>{e.getTracks().forEach((e=>e.stop())),await async function(){if(0===M.value.length)return void(C.value="No audio data recorded. Please try again.");try{E.value=!0,C.value="";const e=new Blob(M.value,{type:M.value[0].type});if(e.size>26214400)return void(C.value="Audio file too large. Please record shorter audio clips.");const t=await e.arrayBuffer();let n;try{const e=new AudioContext;n=function(e){const t=Math.min(e.numberOfChannels,2),n=e.sampleRate,a=1,i=16,o=t*(i/8),r=n*o,s=e.length*o,l=new ArrayBuffer(44+s),c=new DataView(l),d=(e,t)=>{for(let n=0;n<t.length;n++)c.setUint8(e+n,t.charCodeAt(n))};d(0,"RIFF"),c.setUint32(4,36+s,!0),d(8,"WAVE"),d(12,"fmt "),c.setUint32(16,16,!0),c.setUint16(20,a,!0),c.setUint16(22,t,!0),c.setUint32(24,n,!0),c.setUint32(28,r,!0),c.setUint16(32,o,!0),c.setUint16(34,i,!0),d(36,"data"),c.setUint32(40,s,!0);let u=44;for(let n=0;n<e.length;n++)for(let a=0;a<t;a++){const t=e.getChannelData(a),i=Math.max(-1,Math.min(1,t[n]));c.setInt16(u,32767*i,!0),u+=2}return new Blob([l],{type:"audio/wav"})}(await e.decodeAudioData(t)),e.close()}catch(t){console.warn("Could not decode audio, using original blob:",t),n=e}const a=new FormData;a.append("file",n,"audio.wav"),a.append("model","whisper-1"),"auto"!==T.language&&a.append("language",T.language);const i=await fetch("https://api.openai.com/v1/audio/transcriptions",{method:"POST",headers:{Authorization:`Bearer ${N.value}`},body:a});if(!i.ok){const e=await i.json().catch((()=>null)),t=e?.error?.message||`HTTP ${i.status} ${i.statusText}`;throw new Error(`OpenAI API Error: ${t}`)}const o=await i.json();if(o.text&&o.text.trim()){const e=T.value||"";let t;if(T.append_mode&&e){let n="";switch(T.line_separator){case"space":n=e.endsWith(" ")?"":" ";break;case"newline":n=e.endsWith("\n")?"":"\n";break;case"none":n="";break;default:n=O.value?e.endsWith("\n")?"":"\n":e.endsWith(" ")||e.endsWith("\n")?"":" "}t=e+n+o.text.trim()}else t=o.text.trim();I("input",t)}else C.value="No speech detected. Please try speaking more clearly or check your microphone."}catch(e){const t=e instanceof Error?e.message:"Unknown error";t.includes("network")||t.includes("fetch")?C.value="Network error. Please check your internet connection and try again.":t.includes("API key")?C.value="Invalid API key. Please check your OpenAI API key.":C.value=`Speech recognition error: ${t}`,console.error("Speech recognition error:",e)}finally{E.value=!1}}()},U.value.onerror=t=>{console.error("MediaRecorder error:",t),C.value="Recording error occurred",e.getTracks().forEach((e=>e.stop())),S.value=!1},U.value.start(1e3),S.value=!0}catch(e){const t=e instanceof Error?e.message:"Unknown error";t.includes("Permission denied")||t.includes("NotAllowedError")?C.value="Microphone access denied. Please allow microphone permissions and try again.":t.includes("NotFoundError")?C.value="No microphone found. Please connect a microphone and try again.":C.value=`Failed to access microphone: ${t}`,console.error("Error accessing microphone:",e)}}()}return(e,t)=>{const n=i("v-notice"),a=i("v-icon");return o(),r("div",m,[s("div",g,[(o(),l(c(O.value?"v-textarea":"v-input"),{"model-value":e.value,placeholder:e.placeholder,"onUpdate:modelValue":t[0]||(t[0]=t=>e.$emit("input",t)),disabled:S.value,trim:!1,rows:O.value?6:void 0,"expand-on-focus":!1,"auto-grow":!1,class:"speech-input"},null,8,["model-value","placeholder","disabled","rows"])),s("div",x,[s("button",{onClick:R,disabled:!N.value||E.value,title:N.value?S.value?"Stop recording":E.value?"Processing audio...":"Start voice recording":"OpenAI API Key required",class:d(["mic-button",{recording:S.value,processing:E.value,disabled:!N.value||E.value}])},[E.value?(o(),r("span",b,"⏳")):S.value?(o(),r("span",w,"⏹")):(o(),r("span",k,"🎤"))],10,y)])]),N.value?v("v-if",!0):(o(),r("div",_,[u(n,{type:"warning"},{default:p((()=>t[1]||(t[1]=[f(" OpenAI API Key is required. Please configure it in the interface options. ")]))),_:1,__:[1]})])),C.value?(o(),r("div",A,[u(n,{type:"danger"},{default:p((()=>[f(h(C.value),1)])),_:1})])):v("v-if",!0),S.value?(o(),r("div",P,[u(a,{name:"radio_button_checked",class:"recording-pulse"}),t[2]||(t[2]=s("span",null,"Recording... Click stop to finish",-1))])):v("v-if",!0)])}}}),I=[],S=[];!function(e,t){if(e&&"undefined"!=typeof document){var n,a=!0===t.prepend?"prepend":"append",i=!0===t.singleTag,o="string"==typeof t.container?document.querySelector(t.container):document.getElementsByTagName("head")[0];if(i){var r=I.indexOf(o);-1===r&&(r=I.push(o)-1,S[r]={}),n=S[r]&&S[r][a]?S[r][a]:S[r][a]=s()}else n=s();65279===e.charCodeAt(0)&&(e=e.substring(1)),n.styleSheet?n.styleSheet.cssText+=e:n.appendChild(document.createTextNode(e))}function s(){var e=document.createElement("style");if(e.setAttribute("type","text/css"),t.attributes)for(var n=Object.keys(t.attributes),i=0;i<n.length;i++)e.setAttribute(n[i],t.attributes[n[i]]);var r="prepend"===a?"afterbegin":"beforeend";return o.insertAdjacentElement(r,e),e}}("\n.speech-to-text-interface[data-v-b6ff4263] {\n  position: relative;\n}\n.input-container[data-v-b6ff4263] {\n  position: relative;\n  display: flex;\n  align-items: flex-start;\n  gap: 8px;\n}\n.speech-input[data-v-b6ff4263] {\n  flex: 1;\n}\n\n/* Force textarea to maintain consistent size */\n.speech-input[data-v-b6ff4263] .v-textarea {\n  min-height: auto !important;\n}\n.speech-input[data-v-b6ff4263] .v-textarea .v-field__input {\n  min-height: 120px !important;\n  padding-top: 12px !important;\n  padding-bottom: 12px !important;\n}\n.speech-input[data-v-b6ff4263] .v-input .v-field {\n  min-height: auto !important;\n}\n.mic-button-container[data-v-b6ff4263] {\n  display: flex;\n  align-items: flex-start;\n  padding-top: 12px;\n}\n\n/* Custom button styling */\n.mic-button[data-v-b6ff4263] {\n  width: 32px;\n  height: 32px;\n  border: none;\n  border-radius: 6px;\n  background: var(--theme--primary);\n  color: white;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 14px;\n  transition: all 0.2s ease;\n  padding: 0;\n  margin: 0;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n.mic-button[data-v-b6ff4263]:hover:not(.disabled) {\n  background: var(--theme--primary-125);\n  transform: translateY(-1px);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.15);\n}\n.mic-button.recording[data-v-b6ff4263] {\n  background: var(--theme--danger);\n  animation: pulse-b6ff4263 1.5s ease-in-out infinite;\n}\n.mic-button.recording[data-v-b6ff4263]:hover {\n  background: var(--theme--danger-125);\n}\n.mic-button.processing[data-v-b6ff4263] {\n  background: var(--theme--warning);\n  cursor: wait;\n}\n.mic-button.disabled[data-v-b6ff4263] {\n  background: var(--theme--foreground-subdued);\n  cursor: not-allowed;\n  opacity: 0.6;\n  transform: none;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n.mic-button[data-v-b6ff4263]:active:not(.disabled) {\n  transform: translateY(0);\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n.warning-message[data-v-b6ff4263],\n.error-message[data-v-b6ff4263] {\n  margin-top: 8px;\n}\n.recording-indicator[data-v-b6ff4263] {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  margin-top: 8px;\n  color: var(--theme--danger);\n  font-size: 14px;\n  font-weight: 500;\n}\n.recording-pulse[data-v-b6ff4263] {\n  animation: pulse-b6ff4263 1.5s ease-in-out infinite;\n}\n@keyframes pulse-b6ff4263 {\n0%, 100% { \n    opacity: 1;\n    transform: scale(1);\n}\n50% { \n    opacity: 0.6;\n    transform: scale(1.1);\n}\n}\n\n/* Dark mode compatibility */\n@media (prefers-color-scheme: dark) {\n.recording-indicator[data-v-b6ff4263] {\n    color: var(--theme--danger);\n}\n}\n",{});var E=e({id:"speech-to-text",name:"Speech to Text",description:"Text input with speech-to-text functionality using OpenAI Whisper",icon:"mic",component:((e,t)=>{const n=e.__vccOpts||e;for(const[e,a]of t)n[e]=a;return n})(T,[["__scopeId","data-v-b6ff4263"],["__file","speech-to-text.vue"]]),types:["string","text"],group:"standard",options:[{field:"placeholder",name:"Placeholder",type:"string",meta:{width:"half",interface:"input",options:{placeholder:"Enter placeholder text..."}},schema:{default_value:"Text eingeben oder Mikrofon verwenden..."}},{field:"openai_api_key",name:"OpenAI API Key",type:"string",meta:{width:"full",interface:"input",options:{masked:!0}}},{field:"language",name:"Language",type:"string",meta:{width:"half",interface:"select-dropdown",options:{choices:[{text:"Auto-detect",value:"auto"},{text:"German",value:"de"},{text:"English",value:"en"},{text:"Spanish",value:"es"},{text:"French",value:"fr"},{text:"Italian",value:"it"},{text:"Portuguese",value:"pt"},{text:"Russian",value:"ru"},{text:"Japanese",value:"ja"},{text:"Chinese",value:"zh"}]}},schema:{default_value:"auto"}},{field:"append_mode",name:"Append Mode",type:"boolean",meta:{width:"half",interface:"boolean",options:{label:"Append to existing text (instead of replacing)"}},schema:{default_value:!0}},{field:"line_separator",name:"Text Separator",type:"string",meta:{width:"half",interface:"select-dropdown",options:{choices:[{text:"Auto (Space for input, Newline for textarea)",value:"auto"},{text:"Space",value:"space"},{text:"New Line",value:"newline"},{text:"No Separator",value:"none"}]}},schema:{default_value:"auto"}}],preview:'<svg width="156" height="96" fill="none" xmlns="http://www.w3.org/2000/svg"><rect x="18" y="15" width="120" height="66" rx="6" fill="var(--theme--background)" class="glow" /><rect x="19" y="16" width="118" height="64" rx="5" stroke="var(--theme--primary)" stroke-width="2" /><circle cx="40" cy="48" r="12" fill="var(--theme--primary)" fill-opacity=".25" /><circle cx="40" cy="48" r="8" fill="var(--theme--primary)" /><rect x="60" y="40" width="60" height="6" rx="2" fill="var(--theme--primary)" fill-opacity=".25" /><rect x="60" y="50" width="40" height="6" rx="2" fill="var(--theme--primary)" fill-opacity=".25" /></svg>'});export{E as default};
